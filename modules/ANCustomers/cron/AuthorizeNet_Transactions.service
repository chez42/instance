<?php
/* ********************************************************************************
* The content of this file is subject to the VTEAuthnet("License");
* You may not use this file except in compliance with the License
* The Initial Developer of the Original Code is VTExperts.com
* Portions created by VTExperts.com. are Copyright(C) VTExperts.com.
* All Rights Reserved.
* ****************************************************************************** */

require_once("includes/runtime/BaseModel.php");
require_once("modules/Vtiger/models/Record.php");
require_once("modules/Users/models/Record.php");
require_once("includes/runtime/Globals.php");
require_once("include/utils/utils.php");
require_once("includes/runtime/LanguageHandler.php");
require_once("includes/Loader.php");
require_once('modules/ANCustomers/libs/transactions.php');
require_once('modules/ANCustomers/libs/AuthnetHelper.php');

ini_set('display_errors','on'); error_reporting(E_ALL & ~E_WARNING & ~E_NOTICE & ~E_DEPRECATED & ~E_STRICT);   // DEBUGGING

global $adb, $VTIGER_BULK_SAVE_MODE, $current_user;

if (!$current_user) {
    $current_user = new Users();
    $current_user->id = 1;
    $current_user = $current_user->retrieve_entity_info($current_user->id, "Users");
}
if(!$adb){
    $adb=PearDatabase::getInstance();
}

//check module enable Authorize Integrate or disable
$authnetHelper = new AuthnetHelper();
$authnetStatus = $authnetHelper->isANEnable(true);
if($authnetStatus->status === false){
    echo $authnetStatus->message;
    echo "\n";
    exit();
}

$anTransaction = new ANCustomerTransactions();
//get transactions from Vtiger
$query = "SELECT vtiger_antransactions.*
                FROM `vtiger_antransactions`
                INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid = vtiger_antransactions.antransactionsid
                LEFT JOIN vtiger_payments ON vtiger_payments.paymentid = vtiger_antransactions.payment_id
                LEFT JOIN vtiger_crmentity AS paymentcrmentity ON paymentcrmentity.crmid = vtiger_payments.paymentid
                WHERE vtiger_crmentity.deleted=0 AND vtiger_antransactions.an_id IS NOT NULL
                AND vtiger_antransactions.an_id != '' AND vtiger_antransactions.an_id != '0'
                AND paymentcrmentity.deleted = 0 AND vtiger_antransactions.antransactionsid > 0 
                AND vtiger_antransactions.an_status = 'capturedPendingSettlement' ";
$result = $adb->pquery($query, array());
if($adb->num_rows($result)){
    $i = 1;
    while($row = $adb->fetchByAssoc($result)){
        if($i%10 == 0){
            sleep(1);
        }
        $transactionId = $row['an_id'];
        $transactionStatus = $row['an_status'];
        $transactionDetails = $anTransaction->getTransactionDetails($transactionId);
        if($transactionDetails['status']=='SUCCESS'){
            if(trim($transactionDetails['transaction_status']) != trim($transactionStatus)){
                $tranSactionRecordModel = Vtiger_Record_Model::getInstanceById($row['antransactionsid'], 'ANTransactions');
                $data = $tranSactionRecordModel->getData();
                $tranSactionRecordModel->set('mode', 'edit');
                $tranSactionRecordModel->set('an_status', trim($transactionDetails['transaction_status']));
                $tranSactionRecordModel->save();
                //report
                echo "Updated Status of Transaction ".$row['an_id']."(".$row['antransactionsid'].") Success: from '".$transactionStatus."' to '".trim($transactionDetails['transaction_status'])."' \n";
                flush();
            }
        }else{
            //show error
            echo "Updated Status of Transaction ".$row['an_id']."(".$row['antransactionsid'].") Error: ".$transactionDetails['error_message'] . "\n";
            flush();
        }
        $i++;
    }
}
