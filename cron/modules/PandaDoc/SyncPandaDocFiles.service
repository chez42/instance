<?php

global $adb;

$pandadoc_settings_result = $adb->pquery("SELECT * FROM vtiger_pandadoc_oauth WHERE
    (access_token is not NULL and access_token != '' )",array());

if($adb->num_rows($pandadoc_settings_result)){
    
    for($i = 0; $i < $adb->num_rows($pandadoc_settings_result); $i++){
        
        $token_data = $adb->query_result_rowdata($pandadoc_settings_result, $i);
        
        $user_id = $token_data['userid'];
        
        $token = validateToken($token_data);
        
        if(!$token)
            continue;
            
            $headers = array(
                "Authorization: Bearer ".$token['access_token']
            );
            
            $reference_result = $adb->pquery("select * from vtiger_pandadocdocument_reference
            where userid = ?", array($user_id));
            
            if($adb->num_rows($reference_result)){
                
                for($index = 0; $index < $adb->num_rows($reference_result); $index++){
                    
                    $meta_data_reference = $adb->query_result($reference_result, $index, "crm_reference");
                    
                    $url = "https://api.pandadoc.com/public/v1/documents?metadata_reference=".$meta_data_reference;
                    
                    $curl = curl_init($url);
                    
                    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
                    
                    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
                    
                    curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
                    
                    $response = curl_exec($curl);
                    
                    $response = json_decode($response, true);
                    
                    if(isset($response['results'][0]['id'])){
                        
                        $docId = $response['results'][0]['id'];
                        
                        $status = $response['results'][0]['status'];
                        
                        if(
                            $status == 'document.completed' ||
                            $status == 'document.paid' ||
                            $status == 'document.approved'
                            ){
                                
                                $details = getDocumentDetails($headers, $docId);
                                
                                $crm_reference = $details['metadata']['CRM_REFERENCE'];
                                
                                $file = documentDocument($headers, $docId);
                                
                                if($crm_reference && $file){
                                    //Start Creating Document
                                    $focus = CRMEntity::getInstance('Documents');
                                    
                                    $focus->column_fields['notes_title'] = $details['name'];
                                    
                                    $focus->column_fields['assigned_user_id'] = $user_id;
                                    
                                    $focus->column_fields['filename'] = str_replace(' ','_',$details['name']).'.pdf';
                                    
                                    $focus->column_fields['filetype'] = 'application/pdf';
                                    
                                    $focus->column_fields['filelocationtype'] = 'I';
                                    
                                    $focus->column_fields['filestatus'] = 1;
                                    
                                    $focus->saveentity('Documents');
                                    
                                    if($focus->id){
                                        
                                        $conQuery = $adb->pquery("SELECT  * FROM vtiger_contactdetails
                                        INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid = vtiger_contactdetails.contactid
                                        WHERE vtiger_crmentity.deleted = 0 AND vtiger_contactdetails.contact_no = ?",
                                            array($crm_reference));
                                        
                                        if($adb->num_rows($conQuery)){
                                            $contactId = $adb->query_result($conQuery, 0, 'contactid');
                                            
                                            $adb->pquery("INSERT INTO vtiger_senotesrel(crmid, notesid) VALUES (?, ?)",array($contactId, $focus->id));
                                        }
                                        
                                        $date_var = date("Y-m-d H:i:s");
                                        
                                        $upload_file_path = decideFilePath();
                                        
                                        $current_id = $adb->getUniqueID("vtiger_crmentity");
                                        
                                        $name = $upload_file_path.$current_id.'_'.str_replace(' ','_',$details['name']).'.pdf';
                                        
                                        file_put_contents($name, $file);
                                        
                                        $sql1 = "INSERT INTO vtiger_crmentity (crmid,smcreatorid,smownerid,setype,description,createdtime,modifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?)";
                                        $params1 = array($current_id, $user_id, $user_id, 'Documents Attachment', 'PandaDoc Document', $adb->formatDate($date_var, true), $adb->formatDate($date_var, true));
                                        $adb->pquery($sql1, $params1);
                                        //Add entry to attachments
                                        $sql2 = "INSERT INTO vtiger_attachments(attachmentsid, name, description, type, path) values(?, ?, ?, ?, ?)";
                                        $params2 = array($current_id, str_replace(' ','_',$details['name']).'.pdf' , 'PandaDoc Document', 'application/pdf', $upload_file_path);
                                        $adb->pquery($sql2, $params2);
                                        //Add relation
                                        $sql3 = 'INSERT INTO vtiger_seattachmentsrel VALUES(?,?)';
                                        $params3 = array($focus->id, $current_id);
                                        $adb->pquery($sql3, $params3);
                                        
                                    }
                                    
                                }
                                
                                $adb->pquery("delete from vtiger_pandadocdocument_reference where
                                crm_reference = ?", array($meta_data_reference));
                                
                        } else if(
                            $status == 'document.rejected' ||
                            $status == 'document.paid' ||
                            $status == 'document.declined'
                            ){
                                
                                $adb->pquery("delete from vtiger_pandadocdocument_reference where
                                crm_reference = ?", array($meta_data_reference));
                                
                        }
                        
                    }
                    
                }
                
            }
            
    }
    
}

function getDocumentDetails($headers, $id){
    
    $crm_reference = '';
    
    $url = "https://api.pandadoc.com/public/v1/documents/$id/details";
    
    $curl = curl_init($url);
    
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
    
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
    
    curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
    
    $response = curl_exec($curl);
    
    $response = json_decode($response, true);
    
    if(isset($response['id'])){
        $crm_reference = $response['metadata']['CRM_REFERENCE'];
    }
    
    return $response;
    
}

function documentDocument($headers, $id){
    
    $url = "https://api.pandadoc.com/public/v1/documents/$id/download";
    
    $curl = curl_init($url);
    
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
    
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
    
    curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
    
    $response = curl_exec($curl);
    
    return $response;
    
}


function validateToken($token){
    
    $headers = array(
        "Authorization: Bearer ".$token['access_token'],
    );
    
    $url = "https://api.pandadoc.com/public/v1/documents";
    
    $curl = curl_init($url);
    
    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
    
    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
    
    curl_setopt($curl, CURLOPT_HTTPHEADER, $headers);
    
    $response = curl_exec($curl);
    
    $response = json_decode($response, true);
    
    if(!isset($response['results'])){
        
        $client_id = PandaDoc_Config_Connector::$clientId;
        
        $client_secret = PandaDoc_Config_Connector::$clientSecret;
        
        $token_request_data = array(
            "grant_type" => "refresh_token",
            "refresh_token" => $token['refresh_token'],
            "client_id" => $client_id,
            "client_secret" => $client_secret,
            "scope" => "read write"
        );
        
        $token_request_body = http_build_query($token_request_data);
        
        $curl = curl_init('https://api.pandadoc.com/oauth2/access_token/');
        
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
        
        curl_setopt($curl, CURLOPT_POST, true);
        
        curl_setopt($curl, CURLOPT_POSTFIELDS, $token_request_body);
        
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
        
        $response = curl_exec($curl);
        
        $response = json_decode($response, true);
        
        if(isset($response['access_token'])){
            
            $token['access_token'] = $response['access_token'];
            
            $token['refresh_token'] = $response['refresh_token'];
            
            $token['token_type'] = $response['token_type'];
            
            $token['expires_in'] = $response['expires_in'];
            
            $token['userid'] = $token['userid'];
            
            saveToken($token);
            
            return $token;
            
        } else {
            return '';
        }
        
    } else {
        return $token;
    }
    
}

function saveToken($token_data){
    
    global $adb, $current_user;
    
    $access_token = $token_data['access_token'];
    
    $refresh_token = $token_data['refresh_token'];
    
    $token_type = $token_data['token_type'];
    
    $expires_in = $token_data['expires_in'];
    
    $current_user_id = $token_data['userid'];
    
    $tQuery = $adb->pquery("SELECT * FROM vtiger_pandadoc_oauth WHERE
        vtiger_pandadoc_oauth.userid =?", array($current_user_id));
    
    if($adb->num_rows($tQuery)){
        
        $adb->pquery("UPDATE vtiger_pandadoc_oauth SET access_token = ?, refresh_token = ?, token_type = ?,
            expires_in = ? WHERE userid = ?", array($access_token, $refresh_token, $token_type,
                $expires_in, $current_user_id));
        
    } else {
        
        $adb->pquery("INSERT INTO vtiger_pandadoc_oauth(userid, access_token, refresh_token, token_type, expires_in)
            VALUES (?, ?, ?, ?, ?)",array($current_user_id, $access_token, $refresh_token, $token_type, $expires_in));
        
    }
    
}

?>