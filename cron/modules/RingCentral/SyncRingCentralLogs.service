<?php

		require_once 'modules/RingCentral/vendor/autoload.php';

		global $adb, $current_user;


		if(RingCentral_Config_Connector::$server == 'Sandbox')
			$rcsdk = new RingCentral\SDK\SDK(RingCentral_Config_Connector::$client_id, RingCentral_Config_Connector::$client_secret, RingCentral\SDK\SDK::SERVER_SANDBOX);
		
		if(RingCentral_Config_Connector::$server == 'Production')
			$rcsdk = new RingCentral\SDK\SDK(RingCentral_Config_Connector::$client_id, RingCentral_Config_Connector::$client_secret, RingCentral\SDK\SDK::SERVER_PRODUCTION);
        
        $platform = $rcsdk->platform();
        
        $ringCentral_settings_result = $adb->pquery("SELECT * FROM vtiger_ringcentral_oauth where 
		( access_token is not NULL and access_token != '' )",array());
        
        if($adb->num_rows($ringCentral_settings_result)){
            
            for($i = 0; $i < $adb->num_rows($ringCentral_settings_result); $i++){
                
                $token_data = $adb->query_result_rowdata($ringCentral_settings_result, $i);
                
                $fromNo = $adb->query_result($ringCentral_settings_result, $i, 'from_no');
                
                $token = array();
                
                $token['token_type'] = $token_data['token_type'];
                $token['expires_in'] = $token_data['access_token_expires_in'];
                $token['access_token'] = $token_data['access_token'];
                $token['refresh_token'] = $token_data['refresh_token'];
                $token['refresh_token_expires_in'] = $token_data['refresh_token_expires_in'];
                $token['access_token_expiry_time'] = strtotime($token_data['access_token_expiry_time']);
                $token['refresh_token_expiry_time'] = strtotime($token_data['refresh_token_expiry_time']);
                
                $current_time = strtotime(date("Y-m-d H:i:s"));
                
                $user_id = $token_data['userid'];
                
                $platform->auth()->setData($token);
                
                if(
					$token['access_token_expiry_time'] < $current_time && 
					$token['refresh_token_expiry_time'] > $current_time
				){
					
                    try {
                        $api_response = $platform->refresh();
                        $token_response =  $api_response->text();
                        saveToken($token_response, $user_id);
                    } catch(Exception $e){
                        $adb->pquery("update vtiger_ringcentral_oauth set access_token = ''
						where userid = ?",array($user_id));
                        continue;
                    }
                }
				
				
				if(
					$token['access_token_expiry_time'] < $current_time && 
					$token['refresh_token_expiry_time'] < $current_time
				){
					 $adb->pquery("update vtiger_ringcentral_oauth set access_token = ''
					 where userid = ?",array($user_id));
                     continue;
				}
                
				
				
                $token['lastmsgsynctime'] = $token_data['lastmsgsynctime'] ? $token_data['lastmsgsynctime'] : date("Y-m-d H:i:s", strtotime("-10 hours"));
                
				$syncStartDate = date('c', strtotime($token['lastmsgsynctime']));
                
				//$syncLastTime = date('c', strtotime("+30 minutes", strtotime($token['lastmsgsynctime'])));
                
                /**** Message Sync Begins ****/
                
				$message_logs = $platform->get('/account/~/extension/~/message-store',array(
                    'dateFrom' => $syncStartDate,
                    'messageType' => 'SMS',
					'page' => 1,
					'perPage' => 1000,
                ));
				
				$message_logs = json_decode($message_logs->text(), true);
                
				
				$modified_time_array =  array();
                
				foreach($message_logs['records'] as $record){
                    $modified_time_array[] = $record['lastModifiedTime'];
                }
                
                $message_sync = true;
                
                $count = 2;
                
                while($message_sync){
                    
                    syncMessages($user_id, $message_logs);
                    
                    if(!isset($message_logs['navigation']['nextPage'])){
                        $message_sync = false;
                    }
                    
					if($message_sync){
                        
                        $message_logs = $platform->get('/account/~/extension/~/message-store',array(
                            'dateFrom' => $syncStartDate,
                            'messageType' => 'SMS',
                            'page' => $count,
							'perPage' => 1000,
					    ));
                        
						$count++;
						
                        $message_logs = json_decode($message_logs->text(), true);
                        
                        foreach($message_logs['records'] as $record){
                            $modified_time_array[] = $record['lastModifiedTime'];
                        }
                    }
                }
				
				if(!empty($modified_time_array)){
                    usort($modified_time_array, 'sort_date');
                    $syncLastTime = date('c', strtotime("-5 minutes", strtotime(   $modified_time_array[count($modified_time_array)- 1]   ) ));
                } else {
					$syncLastTime =  date('c');
				}
                
                $adb->pquery("UPDATE vtiger_ringcentral_oauth SET 
				lastmsgsynctime = ? where userid = ? ",array($syncLastTime, $token_data['userid']));
                
                /**** Message Sync Ends ****/
                
				
				/** Call Sync Begins ***/
                
                $token['lastcallsynctime'] = $token_data['lastcallsynctime'] ? $token_data['lastcallsynctime'] : date("Y-m-d H:i:s", strtotime("-10 hours"));
                $syncStartDate = date('c', strtotime($token['lastcallsynctime']));
                
                //$syncLastTime = date('c', strtotime("+30 minutes", strtotime($token['lastcallsynctime'])));
                
                $call_logs = $platform->get('/account/~/extension/~/call-log',array(
                    'dateFrom' => $syncStartDate,
                    'type' => 'Voice',
                    'transport' => 'VoIP',
					'page' => 1,
					'perPage' => 1000,
                ));
				
                $call_logs = json_decode($call_logs->text(), true);
              
				$modified_time_array =  array();
                
                foreach($call_logs['records'] as $record){
                    $modified_time_array[] = $record['startTime'];
                }
                
                $call_sync = true;
                
                $count = 2;
                
                while($call_sync){
                    
                    syncCalls($user_id, $call_logs);
                    
                    if(!isset($call_logs['navigation']['nextPage'])){
                        $call_sync = false;
                    }
                    
                    if($call_sync){
                        
                        $call_logs = $platform->get('/account/~/extension/~/call-log',array(
                            'dateFrom' => $syncStartDate,
                            'type' => 'Voice',
                            'transport' => 'VoIP',
                            'page' => $count,
							'perPage' => 1000,
					    ));
                        
						$count++;
                    
                        $call_logs = json_decode($call_logs->text(), true);
                        
                        foreach($call_logs['records'] as $record){
                            $modified_time_array[] = $record['startTime'];
                        }
                    }
                }
                
                
                if(!empty($modified_time_array)){
                    usort($modified_time_array, 'sort_date');
                    $syncLastTime = date('c', strtotime("-5 minutes", strtotime(   $modified_time_array[count($modified_time_array)- 1]   ) ));
				}  else {
					$syncLastTime =  date('c');
				}
				
                $adb->pquery("UPDATE vtiger_ringcentral_oauth SET lastcallsynctime = ? where userid = ? ",array($syncLastTime, $token_data['userid']));
                
				/** Call Sync Ends ***/
                
                
                /** Fax Sync Begins ***/
                
                $token['lastfaxsynctime'] = $token_data['lastfaxsynctime'] ? $token_data['lastfaxsynctime'] : date("Y-m-d H:i:s", strtotime("-10 hours"));
                $syncStartDate = date('c', strtotime($token['lastfaxsynctime']));
                
                //$syncLastTime = date('c', strtotime("+30 minutes", strtotime($token['lastfaxsynctime'])));
                
                $fax_logs = $platform->get('/account/~/extension/~/message-store',array(
                    'dateFrom' => $syncStartDate,
                    'messageType' => 'Fax',
					'perPage' => 1000,
					'page' => 1
                ));
                
                $fax_logs = json_decode($fax_logs->text(), true);
                
				$modified_time_array =  array();
				
                foreach($fax_logs['records'] as $record){
                    $modified_time_array[] = $record['lastModifiedTime'];
                }
                
                $fax_sync = true;
                
                $count = 2;
                
                while($fax_sync){
                    
                    syncMessages($user_id, $fax_logs, $platform);
                    
                    if(!isset($fax_logs['navigation']['nextPage'])){
                        $fax_sync = false;
                    }
                    
                    if($fax_sync){
                        
                        $fax_logs = $platform->get('/account/~/extension/~/message-store',array(
                            'dateFrom' => $syncStartDate,
                            'messageType' => 'Fax',
                            'page' => $count,
							'perPage' => 1000,
					    ));
                        
						$count++;
						
                        $fax_logs = json_decode($fax_logs->text(), true);
                        
                        foreach($fax_logs['records'] as $record){
                            $modified_time_array[] = $record['lastModifiedTime'];
                        }
                    }
                }
                
                if(!empty($modified_time_array)){
                    
					usort($modified_time_array, 'sort_date');
                    $syncLastTime = date('c', strtotime("-5 minutes", strtotime(   $modified_time_array[count($modified_time_array) - 1]   ) ));
                
				} else {
					
				 	$syncLastTime =  date('c');
				
				}
                
                $adb->pquery("UPDATE vtiger_ringcentral_oauth SET lastfaxsynctime = ? where userid = ? ",array($syncLastTime, $token_data['userid']));
                /** Fax Sync Ends ***/
            }
        }
        
        
        function syncCalls($user_id, $calls){
            
            global $adb;
            
            foreach($calls['records'] as $record){
                
                $obj = CRMEntity::getInstance("RingCentral");
                
                $ringcentral_result = $adb->pquery("SELECT * FROM vtiger_ringcentral
				INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid = vtiger_ringcentral.ringcentralid
				WHERE vtiger_crmentity.deleted = 0 AND vtiger_ringcentral.request_id = ?",
                array($record['id']));
                
                if($adb->num_rows($ringcentral_result)){
                    $ringId = $adb->query_result($ringcentral_result,0,'ringcentralid');
                    $obj->id = $ringId;
                    $obj->retrieve_entity_info($ringId, "RingCentral");
                    $obj->mode = 'edit';
                }
                
                if($record['direction'] == 'Inbound')
                    $direction = 'Incoming';
                else
					$direction = 'Outgoing';
                        
				$obj->column_fields['direction'] = $direction;
				
				$obj->column_fields['ringcentral_type'] = 'Call';
				
				$obj->column_fields['ringcentral_status'] = $record['result'];
				
				$obj->column_fields['from_number'] = $record['from']['phoneNumber'];
				
				$obj->column_fields['request_id'] = $record['id'];
				
				$obj->column_fields['assigned_user_id'] = $user_id;
				
				$log_date = date('Y-m-d',strtotime($record['startTime']));
				$obj->column_fields['log_date'] = $log_date;
				
				$obj->save("RingCentral");
                        
				if($obj->id){
					
					$toNums = $record['to'] ;
					
					$toNums['phoneNumber'] = substr($toNums['phoneNumber'], -10);
					
					$crmId = PBXManager_Record_Model::lookUpRelatedWithNumber($toNums['phoneNumber']);
					
					if(isset($crmId['id'])){
					
						
						$relIds = $adb->pquery("SELECT * FROM vtiger_seringcentralrel
		WHERE vtiger_seringcentralrel.crmid =? AND vtiger_seringcentralrel.ringcentralid = ?
		AND vtiger_seringcentralrel.to_number = ? ", array($crmId['id'],$obj->id, $toNums['phoneNumber']));
						
						
						if(!$adb->num_rows($relIds)){
							$adb->pquery("INSERT INTO vtiger_seringcentralrel(crmid, ringcentralid, to_number) VALUES (?,?,?)",
							array($crmId['id'],$obj->id,$toNums['phoneNumber']));
						}
					}
				}
			}
        }
        
        function syncMessages($user_id, $messages, $platform = ''){
            
            global $adb;
            
            foreach($messages['records'] as $record){
                
                $obj = CRMEntity::getInstance("RingCentral");
                
                $ringcentral_result = $adb->pquery("SELECT * FROM vtiger_ringcentral
				INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid = vtiger_ringcentral.ringcentralid
				WHERE vtiger_crmentity.deleted = 0 AND vtiger_ringcentral.request_id = ?",
                array($record['id']));
                
                if($adb->num_rows($ringcentral_result)){
                    $ringId = $adb->query_result($ringcentral_result,0,'ringcentralid');
                    $obj->id = $ringId;
                    $obj->retrieve_entity_info($ringId, "RingCentral");
                    $obj->mode = 'edit';
                }
                
                $obj->column_fields['assigned_user_id'] = $user_id;
                
                $obj->column_fields['ringcentral_status'] = $record['messageStatus'];
                
                $obj->column_fields['ringcentral_type'] = $record['type'];
                
                if($record['direction'] == 'Inbound')
                    $direction = 'Incoming';
                else
                    $direction = 'Outgoing';
                        
				$obj->column_fields['direction'] = $direction;
				
				$obj->column_fields['from_number'] = $record['from']['phoneNumber'];
				
				$obj->column_fields['request_id'] = $record['id'];
				
				$obj->column_fields['description'] = $record['subject'];
				
				$log_date = date('Y-m-d',strtotime($record['creationTime']));
				$obj->column_fields['log_date'] = $log_date;
				
				$obj->save("RingCentral");
                
				if($obj->id){
                
					if($record['type'] == 'Fax' && $record['messageStatus'] == 'Sent')
						syncFiles($record,$obj->id,$platform);
                                
                    foreach($record['to'] as $toNums){
						
						$toNums['phoneNumber'] = substr($toNums['phoneNumber'], -10);
                        
						$crmId = PBXManager_Record_Model::lookUpRelatedWithNumber($toNums['phoneNumber']);
									
						if(isset($crmId['id'])){
							
							$relIds = $adb->pquery("SELECT * FROM vtiger_seringcentralrel
							WHERE vtiger_seringcentralrel.crmid =? AND vtiger_seringcentralrel.ringcentralid = ?
							AND vtiger_seringcentralrel.to_number = ? ",
							array($crmId['id'],$obj->id, $toNums['phoneNumber']));
										
							if(!$adb->num_rows($relIds)){
								$adb->pquery("INSERT INTO vtiger_seringcentralrel(crmid, ringcentralid, to_number) VALUES (?,?,?)",
								array($crmId['id'],$obj->id,$toNums['phoneNumber']));
							}
						}
					}
				}
            }
        }
        
        function syncFiles($record, $recordId, $platform){
            
            global $adb,$site_URL;
            
            $ringCentralFile = '';
            
            $msgId = $record['id'];
            
            $attachments = $record['attachments'];
            
            foreach($attachments as $attData){
                
                $attId = $attData['id'];
                
                $file_logs = $platform->get('/account/~/extension/~/message-store/'.$msgId.'/content/'.$attId,array(
                    'contentDisposition' => 'Attachment'
                ));
                
                $filePath = 'cache/faxfiles/';
                
                if(!is_dir('cache/faxfiles')){
                    mkdir($filePath);
                }
                
                file_put_contents($filePath.'/'.$msgId.'.pdf',$file_logs->text());
                
                $ringCentralFile = $site_URL.$filePath.$msgId.'.pdf';
                
            }
            
            $adb->pquery("update vtiger_ringcentral SET file_link = ? WHERE ringcentralid = ?",array($ringCentralFile,$recordId));
            
        }
        
        function saveToken($token_data, $user_id){
            
            global $adb;
            
            $token = json_decode($token_data, true);
            
            $access_token = $token['access_token'];
            
            $refresh_token = $token['refresh_token'];
            
            $token_type = $token['token_type'];
            
            $refresh_token_expires_in = $token['refresh_token_expires_in'];
            
            $access_token_expires_in = $token['expires_in'];
            
            $access_token_expiry_time = date("Y-m-d H:i:s", strtotime(date("Y-m-d H:i:s")) + ($token['expires_in'] - 60));
            
            $refresh_token_expiry_time = date("Y-m-d H:i:s", strtotime(date("Y-m-d H:i:s")) + ($token['refresh_token_expires_in'] - 60));
            
            $current_user_id = $user_id;
            
            $result = $adb->pquery('SELECT * FROM vtiger_ringcentral_oauth WHERE userid = ?',array($current_user_id));
            
            if($adb->num_rows($result)){
                
                $adb->pquery("update vtiger_ringcentral_oauth set access_token = ?,
			refresh_token = ?, token_type = ?, refresh_token_expires_in = ?, access_token_expires_in = ?,
			refresh_token_expiry_time = ?, access_token_expiry_time = ? where userid = ?",
                    array($access_token, $refresh_token, $token_type, $refresh_token_expires_in, $access_token_expires_in,
                        $refresh_token_expiry_time, $access_token_expiry_time, $current_user_id));
                
            } else{
                
                $adb->pquery("insert into vtiger_ringcentral_oauth(userid,access_token,
			refresh_token, token_type, refresh_token_expires_in, access_token_expires_in,
			refresh_token_expiry_time, access_token_expiry_time) values(?,?,?,?,?,?,?,?)",
                    array($current_user_id, $access_token, $refresh_token, $token_type, $refresh_token_expires_in,
                        $access_token_expires_in, $refresh_token_expiry_time, $access_token_expiry_time));
                
                
            }
            
        }
        
        function sort_date($obj1, $obj2) {
            $date1 = strtotime($obj1);
            $date2 = strtotime($obj2);
            return $date1 - $date2;
        }